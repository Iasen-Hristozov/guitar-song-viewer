<?xml version="1.0" encoding="utf-8" ?>
<project name="guitar-song-plugins" default="xxx">
	
	<!--<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>-->
	<!--<taskdef resource="net/sf/antcontrib/antlib.xml"/>-->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
	  <classpath>
	    <!--<pathelement location="${ant.jarPath}/ant-contrib-1.0b3.jar"/>-->
	         <fileset dir="${basedir}/"/>
	  </classpath>
	</taskdef>
	<property name="src" value="${basedir}/src" />
	<property name="build" value="${basedir}/build" />
	<property name="plugins" value="${basedir}/plugins" />
	
	<target name="prepare">
		<mkdir dir="${build}" />
	</target>
	
	<target name="clean">
		<delete dir="${build}" />
		<!--<delete file="main.jar" />
		<delete file="rogue.jar" />
		<delete file="authorized.jar" />-->
		<delete file="ABCDisk.jar" />
		<!--<delete file="accords.jar" />
		<delete file="akordite.jar" />
		<delete file="AmDm.jar" />
		<delete file="dix.jar" />
		<delete file="FalshivimVmeste.jar" />
		<delete file="hm6.jar" />
		<delete file="music_place.jar" />
		<delete file="Muzland.jar" />
		<delete file="Pesni.jar" />
		<delete file="spoemte.jar" />
		<delete file="UltimateGuitar.jar" />-->
	</target>
	
	<target name="all" depends="make-all-jars" />
	
	<!-- <target name="make-all-jars" depends="make-main-jar, make-authorized-jar, make-rogue-jar" /> -->
	
	<target name="make-all-jars" depends="make-plugins-test-jar, make-abcdisk-jar" />

   <target name="compile-plugins-test" depends="prepare">
      <javac destdir="${build}" srcdir="${src}/com/discworld/guitarsongplugins" />
   </target>
   
   <target name="make-plugins-test-jar" depends="compile-plugins-test">
      <jar destfile="PluginsTest.jar" basedir="${build}" includes="com/discworld/guitarsongplugins">
         <manifest>
            <attribute name="Main-Class" value="com.discworld.guitarsongplugins.PluginTest" />
         </manifest>
      </jar>
   </target>
	
	<!--
	<target name="compile-main" depends="prepare">
		<javac destdir="${build}" srcdir="${src}/main" />
	</target>
	
	<target name="make-main-jar" depends="compile-main">
		<jar destfile="main.jar" basedir="${build}" includes="main/*">
			<manifest>
				<attribute name="Main-Class" value="main.Main" />
			</manifest>
		</jar>
	</target>
   -->
   
	<target name="xxx">
	<for param="plugin-name" list="ABCDisk, Accords">
	  <sequential>
	    <property name="var${index}" value="@{plugin-name}" />
	    <property name="plugin" value="@{plugin-name}" />
<!--	    <math result="index" operand1="${index}" operation="+" operand2="1" datatype="int" />-->
	   
	  	<target name="compile" depends="prepare">
	      <javac destdir="${build}" srcdir="${src}/com/discworld/guitarsongplugins" includes="${src}/com/discworld/guitarsongplugins/${plugin-name}.java"/>
	   </target>
	  	
	   <target name="make-jar" depends="compile">
	      <jar destfile="${plugin-name}.jar" basedir="${build}" />
	      <!-- <jar destfile="ABCDisk.jar" basedir="${build}" includes="com/discworld/guitarsongplugins/ABCDisk.class" /> -->
	   </target>	  	
	  </sequential>
	</for>
		</target>
	
	<target name="compile-abcdisk" depends="prepare">
      <javac destdir="${build}" srcdir="${src}/com/discworld/guitarsongplugins" />
   </target>
   
   <target name="make-abcdisk-jar" depends="compile-abcdisk">
      <jar destfile="ABCDisk.jar" basedir="${build}" />
   	<!-- <jar destfile="ABCDisk.jar" basedir="${build}" includes="com/discworld/guitarsongplugins/ABCDisk.class" /> -->
   </target>
	
	<!--
	<target name="compile-authorized" depends="prepare">
		<javac destdir="${build}" srcdir="${src}/plugins/authorized" />
	</target>
	
	<target name="make-authorized-jar" depends="compile-authorized">
		<jar destfile="authorized.jar" basedir="${build}" includes="plugins/authorized/" />
	</target>
	
	<target name="compile-rogue" depends="prepare">
		<javac destdir="${build}" srcdir="${src}/plugins/rogue" />
	</target>
	
	<target name="make-rogue-jar" depends="compile-rogue">
		<jar destfile="rogue.jar" basedir="${build}" includes="plugins/rogue/" />
	</target>
	-->
</project>
